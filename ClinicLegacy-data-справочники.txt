\c clinic_db

SET search_path = clinic_schema, public;

--SPECIALITY

insert into speciality (name_spec, type_spec) values
('терапевт', true),
('хирург', false),
('травматолог', false),
('эндокринолог', false),
('гастроэнтеролог', false),
('пульмонолог', false),
('оториноларинголог', false),
('невролог', false),
('офтальмолог', false),
('кардиолог', false);


--DEPARTMENT
insert into department (name_dep, type_dep, short_dep) values
('Терапевтическое', true, 'тер.'),
('Хирургическое', false, 'хир.'),
('Ортопедическое', false, 'орт.'),
('Кардиологическое', false, 'кард.'),
('Гастроэнторологическое', false, 'гастр.'),
('Оториноларингологическое', false, 'ЛОР'),
('Пульмонологическое', false, 'пульм.'),
('Эндокринологическое', false, 'энд.'),
('Неврологическое', false, 'невр.'),
('Офтальмологическое', false, 'офт.');


--DOCTOR
--специальности: 1-3
--отделения: 1-3
--кадры 1-50

do $$
declare l_id integer;
		l_date date;
ii integer =0;
begin
loop
exit when ii>49;
	ii=ii+1;
	select floor(random()*3+1)::integer into l_id;
	select '2020-01-01'::date + (random() *356 +1)::integer into l_date;
	
	raise notice '% % % ', ii, l_id, l_date;
	
	insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (ii, l_id, l_id, l_date, false);

end loop;
end$$;



select '2020-01-01'::date + (random() *356 +1)::integer from generate_series (1, 50);

insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (1, 1, 1, '2020-10-27', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (2, 1, 1, '2020-04-12', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (3, 1, 1, '2020-07-19', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (4, 1, 1, '2020-03-30', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (5, 1, 1, '2020-09-28', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (6, 1, 1, '2020-12-10', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (7, 1, 1, '2020-10-11', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (8, 1, 1, '2020-05-15', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (9, 1, 1, '2020-10-30', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (10, 1, 1, '2020-07-06', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (11, 1, 1, '2020-08-12', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (12, 1, 1, '2020-05-13', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (13, 1, 1, '2020-07-06', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (14, 1, 1, '2020-08-21', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (15, 1, 1, '2020-01-30', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (16, 1, 1, '2020-05-16', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (17, 1, 1, '2020-05-27', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (18, 1, 1, '2020-12-08', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (19, 1, 1, '2020-01-03', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (20, 1, 1, '2020-05-25', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (21, 1, 1, '2020-12-03', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (22, 1, 1, '2020-04-24', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (23, 1, 1, '2020-02-15', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (24, 1, 1, '2020-09-30', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (25, 1, 1, '2020-04-12', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (26, 1, 1, '2020-05-07', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (27, 1, 1, '2020-06-14', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (28, 1, 1, '2020-09-20', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (29, 1, 1, '2020-01-28', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (30, 1, 1, '2020-11-29', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (31, 1, 1, '2020-09-26', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (32, 1, 1, '2020-04-10', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (33, 1, 1, '2020-05-21', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (34, 1, 1, '2020-09-14', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (35, 1, 1, '2020-09-18', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (36, 2, 2, '2020-09-14', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (37, 2, 2, '2020-09-12', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (38, 2, 2, '2020-04-09', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (39, 2, 2, '2020-05-10', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (40, 2, 2, '2020-06-29', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (41, 2, 2, '2020-05-26', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (42, 2, 2, '2020-11-24', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (43, 2, 2, '2020-02-26', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (44, 3, 3, '2020-06-23', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (45, 3, 3, '2020-10-26', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (46, 3, 3, '2020-11-24', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (47, 3, 3, '2020-09-04', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (48, 3, 3, '2020-11-05', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (49, 3, 3, '2020-10-13', false);
insert into doctor (id_staff, id_dep, id_spec, empl_date, state) values (50, 3, 3, '2020-06-14', false);


--AREA

insert into area (id_area, id_doctor) values ('01', 1	);
insert into area (id_area, id_doctor) values ('02', 2	);
insert into area (id_area, id_doctor) values ('03', 3	);
insert into area (id_area, id_doctor) values ('04', 4	);
insert into area (id_area, id_doctor) values ('05', 5	);
insert into area (id_area, id_doctor) values ('06', 6	);
insert into area (id_area, id_doctor) values ('07', 7	);
insert into area (id_area, id_doctor) values ('08', 8	);
insert into area (id_area, id_doctor) values ('09', 9	);
insert into area (id_area, id_doctor) values ('10', 10	);
insert into area (id_area, id_doctor) values ('11', 11	);
insert into area (id_area, id_doctor) values ('12', 12	);
insert into area (id_area, id_doctor) values ('13', 13	);
insert into area (id_area, id_doctor) values ('14', 14	);
insert into area (id_area, id_doctor) values ('15', 15	);
insert into area (id_area, id_doctor) values ('16', 16	);
insert into area (id_area, id_doctor) values ('17', 17	);
insert into area (id_area, id_doctor) values ('18', 18	);
insert into area (id_area, id_doctor) values ('19', 19	);
insert into area (id_area, id_doctor) values ('20', 20	);
insert into area (id_area, id_doctor) values ('21', 21	);
insert into area (id_area, id_doctor) values ('22', 22	);
insert into area (id_area, id_doctor) values ('23', 23	);
insert into area (id_area, id_doctor) values ('24', 24	);
insert into area (id_area, id_doctor) values ('25', 25	);
insert into area (id_area, id_doctor) values ('26', 26	);
insert into area (id_area, id_doctor) values ('27', 27	);
insert into area (id_area, id_doctor) values ('28', 28	);
insert into area (id_area, id_doctor) values ('29', 29	);
insert into area (id_area, id_doctor) values ('30', 30	);
insert into area (id_area, id_doctor) values ('31', 31	);
insert into area (id_area, id_doctor) values ('32', 32	);
insert into area (id_area, id_doctor) values ('33', 33	);
insert into area (id_area, id_doctor) values ('34', 34	);
insert into area (id_area, id_doctor) values ('35', 35	);


--ADDRESS


--улицы по участкам

create table tmp_street_list (id_sa integer GENERATED ALWAYS AS IDENTITY PRIMARY KEY, id_street integer, min integer, max integer, id_area integer);

--115 строк из excel
insert into tmp_street_list (id_street, min, max, id_area) values (	1	 , 1, 	50	 , 	1	);
insert into tmp_street_list (id_street, min, max, id_area) values (	2	 , 1, 	50	 , 	1	);
insert into tmp_street_list (id_street, min, max, id_area) values (	3	 , 1, 	50	 , 	24	);
insert into tmp_street_list (id_street, min, max, id_area) values (	4	 , 1, 	50	 , 	2	);
insert into tmp_street_list (id_street, min, max, id_area) values (	5	 , 1, 	50	 , 	2	);
insert into tmp_street_list (id_street, min, max, id_area) values (	6	 , 1, 	50	 , 	25	);
insert into tmp_street_list (id_street, min, max, id_area) values (	7	 , 1, 	50	 , 	28	);
insert into tmp_street_list (id_street, min, max, id_area) values (	8	 , 1, 	50	 , 	26	);
insert into tmp_street_list (id_street, min, max, id_area) values (	9	 , 1, 	50	 , 	3	);
insert into tmp_street_list (id_street, min, max, id_area) values (	10	 , 1, 	50	 , 	3	);
insert into tmp_street_list (id_street, min, max, id_area) values (	11	 , 1, 	50	 , 	4	);
insert into tmp_street_list (id_street, min, max, id_area) values (	12	 , 1, 	50	 , 	27	);
insert into tmp_street_list (id_street, min, max, id_area) values (	13	 , 1, 	50	 , 	4	);
insert into tmp_street_list (id_street, min, max, id_area) values (	14	 , 1, 	50	 , 	5	);
insert into tmp_street_list (id_street, min, max, id_area) values (	15	 , 1, 	50	 , 	5	);
insert into tmp_street_list (id_street, min, max, id_area) values (	16	 , 1, 	50	 , 	5	);
insert into tmp_street_list (id_street, min, max, id_area) values (	17	 , 1, 	50	 , 	5	);
insert into tmp_street_list (id_street, min, max, id_area) values (	18	 , 1, 	50	 , 	6	);
insert into tmp_street_list (id_street, min, max, id_area) values (	19	 , 1, 	50	 , 	29	);
insert into tmp_street_list (id_street, min, max, id_area) values (	20	 , 1, 	50	 , 	7	);
insert into tmp_street_list (id_street, min, max, id_area) values (	21	 , 1, 	30	 , 	30	);
insert into tmp_street_list (id_street, min, max, id_area) values (	22	 , 1, 	30	 , 	8	);
insert into tmp_street_list (id_street, min, max, id_area) values (	23	 , 1, 	30	 , 	31	);
insert into tmp_street_list (id_street, min, max, id_area) values (	24	 , 1, 	30	 , 	9	);
insert into tmp_street_list (id_street, min, max, id_area) values (	25	 , 1, 	30	 , 	32	);
insert into tmp_street_list (id_street, min, max, id_area) values (	26	 , 1, 	30	 , 	10	);
insert into tmp_street_list (id_street, min, max, id_area) values (	27	 , 1, 	30	 , 	33	);
insert into tmp_street_list (id_street, min, max, id_area) values (	28	 , 1, 	30	 , 	11	);
insert into tmp_street_list (id_street, min, max, id_area) values (	29	 , 1, 	30	 , 	12	);
insert into tmp_street_list (id_street, min, max, id_area) values (	30	 , 1, 	30	 , 	34	);
insert into tmp_street_list (id_street, min, max, id_area) values (	31	 , 1, 	20	 , 	13	);
insert into tmp_street_list (id_street, min, max, id_area) values (	32	 , 1, 	20	 , 	35	);
insert into tmp_street_list (id_street, min, max, id_area) values (	33	 , 1, 	20	 , 	14	);
insert into tmp_street_list (id_street, min, max, id_area) values (	34	 , 1, 	20	 , 	14	);
insert into tmp_street_list (id_street, min, max, id_area) values (	35	 , 1, 	10	 , 	15	);
insert into tmp_street_list (id_street, min, max, id_area) values (	36	 , 1, 	10	 , 	16	);
insert into tmp_street_list (id_street, min, max, id_area) values (	37	 , 1, 	10	 , 	17	);
insert into tmp_street_list (id_street, min, max, id_area) values (	38	 , 1, 	10	 , 	18	);
insert into tmp_street_list (id_street, min, max, id_area) values (	39	 , 1, 	50	 , 	19	);
insert into tmp_street_list (id_street, min, max, id_area) values (	40	 , 1, 	50	 , 	20	);
insert into tmp_street_list (id_street, min, max, id_area) values (	41	 , 1, 	50	 , 	21	);
insert into tmp_street_list (id_street, min, max, id_area) values (	42	 , 1, 	6	 , 	22	);
insert into tmp_street_list (id_street, min, max, id_area) values (	43	 , 1, 	6	 , 	23	);
insert into tmp_street_list (id_street, min, max, id_area) values (	39	 , 51, 	100	 , 	22	);
insert into tmp_street_list (id_street, min, max, id_area) values (	40	 , 51, 	100	 , 	21	);
insert into tmp_street_list (id_street, min, max, id_area) values (	41	 , 51, 	100	 , 	23	);
insert into tmp_street_list (id_street, min, max, id_area) values (	39	 , 101, 	150	 , 	15	);
insert into tmp_street_list (id_street, min, max, id_area) values (	40	 , 101, 	150	 , 	16	);
insert into tmp_street_list (id_street, min, max, id_area) values (	41	 , 101, 	150	 , 	17	);
insert into tmp_street_list (id_street, min, max, id_area) values (	39	 , 151, 	200	 , 	11	);
insert into tmp_street_list (id_street, min, max, id_area) values (	40	 , 151, 	200	 , 	12	);
insert into tmp_street_list (id_street, min, max, id_area) values (	41	 , 151, 	200	 , 	13	);
insert into tmp_street_list (id_street, min, max, id_area) values (	1	 , 51, 	100	 , 	21	);
insert into tmp_street_list (id_street, min, max, id_area) values (	2	 , 51, 	100	 , 	21	);
insert into tmp_street_list (id_street, min, max, id_area) values (	3	 , 51, 	100	 , 	22	);
insert into tmp_street_list (id_street, min, max, id_area) values (	4	 , 51, 	100	 , 	23	);
insert into tmp_street_list (id_street, min, max, id_area) values (	5	 , 51, 	100	 , 	23	);
insert into tmp_street_list (id_street, min, max, id_area) values (	6	 , 51, 	100	 , 	30	);
insert into tmp_street_list (id_street, min, max, id_area) values (	7	 , 51, 	100	 , 	31	);
insert into tmp_street_list (id_street, min, max, id_area) values (	8	 , 51, 	100	 , 	32	);
insert into tmp_street_list (id_street, min, max, id_area) values (	9	 , 51, 	100	 , 	33	);
insert into tmp_street_list (id_street, min, max, id_area) values (	10	 , 51, 	100	 , 	33	);
insert into tmp_street_list (id_street, min, max, id_area) values (	11	 , 51, 	100	 , 	34	);
insert into tmp_street_list (id_street, min, max, id_area) values (	12	 , 51, 	100	 , 	17	);
insert into tmp_street_list (id_street, min, max, id_area) values (	13	 , 51, 	100	 , 	14	);
insert into tmp_street_list (id_street, min, max, id_area) values (	14	 , 51, 	100	 , 	15	);
insert into tmp_street_list (id_street, min, max, id_area) values (	15	 , 51, 	100	 , 	15	);
insert into tmp_street_list (id_street, min, max, id_area) values (	16	 , 51, 	100	 , 	15	);
insert into tmp_street_list (id_street, min, max, id_area) values (	17	 , 51, 	100	 , 	15	);
insert into tmp_street_list (id_street, min, max, id_area) values (	18	 , 51, 	100	 , 	16	);
insert into tmp_street_list (id_street, min, max, id_area) values (	19	 , 51, 	100	 , 	9	);
insert into tmp_street_list (id_street, min, max, id_area) values (	20	 , 51, 	100	 , 	27	);
insert into tmp_street_list (id_street, min, max, id_area) values (	1	 , 101, 	150	 , 	11	);
insert into tmp_street_list (id_street, min, max, id_area) values (	2	 , 101, 	150	 , 	11	);
insert into tmp_street_list (id_street, min, max, id_area) values (	3	 , 101, 	150	 , 	12	);
insert into tmp_street_list (id_street, min, max, id_area) values (	4	 , 101, 	150	 , 	13	);
insert into tmp_street_list (id_street, min, max, id_area) values (	5	 , 101, 	150	 , 	13	);
insert into tmp_street_list (id_street, min, max, id_area) values (	6	 , 101, 	150	 , 	10	);
insert into tmp_street_list (id_street, min, max, id_area) values (	7	 , 101, 	150	 , 	11	);
insert into tmp_street_list (id_street, min, max, id_area) values (	8	 , 101, 	150	 , 	12	);
insert into tmp_street_list (id_street, min, max, id_area) values (	9	 , 101, 	150	 , 	13	);
insert into tmp_street_list (id_street, min, max, id_area) values (	10	 , 101, 	150	 , 	13	);
insert into tmp_street_list (id_street, min, max, id_area) values (	11	 , 101, 	150	 , 	14	);
insert into tmp_street_list (id_street, min, max, id_area) values (	12	 , 101, 	150	 , 	16	);
insert into tmp_street_list (id_street, min, max, id_area) values (	13	 , 101, 	150	 , 	4	);
insert into tmp_street_list (id_street, min, max, id_area) values (	14	 , 101, 	150	 , 	5	);
insert into tmp_street_list (id_street, min, max, id_area) values (	15	 , 101, 	150	 , 	5	);
insert into tmp_street_list (id_street, min, max, id_area) values (	16	 , 101, 	150	 , 	5	);
insert into tmp_street_list (id_street, min, max, id_area) values (	17	 , 101, 	150	 , 	5	);
insert into tmp_street_list (id_street, min, max, id_area) values (	18	 , 101, 	150	 , 	35	);
insert into tmp_street_list (id_street, min, max, id_area) values (	19	 , 101, 	150	 , 	10	);
insert into tmp_street_list (id_street, min, max, id_area) values (	20	 , 101, 	150	 , 	28	);
insert into tmp_street_list (id_street, min, max, id_area) values (	39	 , 201, 	300	 , 	14	);
insert into tmp_street_list (id_street, min, max, id_area) values (	40	 , 201, 	300	 , 	15	);
insert into tmp_street_list (id_street, min, max, id_area) values (	41	 , 201, 	300	 , 	16	);
insert into tmp_street_list (id_street, min, max, id_area) values (	1	 , 151, 	200	 , 	12	);
insert into tmp_street_list (id_street, min, max, id_area) values (	2	 , 151, 	200	 , 	12	);
insert into tmp_street_list (id_street, min, max, id_area) values (	3	 , 151, 	200	 , 	13	);
insert into tmp_street_list (id_street, min, max, id_area) values (	4	 , 151, 	200	 , 	14	);
insert into tmp_street_list (id_street, min, max, id_area) values (	5	 , 151, 	200	 , 	14	);
insert into tmp_street_list (id_street, min, max, id_area) values (	6	 , 151, 	200	 , 	11	);
insert into tmp_street_list (id_street, min, max, id_area) values (	7	 , 151, 	200	 , 	12	);
insert into tmp_street_list (id_street, min, max, id_area) values (	8	 , 151, 	200	 , 	13	);
insert into tmp_street_list (id_street, min, max, id_area) values (	9	 , 151, 	200	 , 	14	);
insert into tmp_street_list (id_street, min, max, id_area) values (	10	 , 151, 	200	 , 	15	);
insert into tmp_street_list (id_street, min, max, id_area) values (	11	 , 151, 	200	 , 	16	);
insert into tmp_street_list (id_street, min, max, id_area) values (	12	 , 151, 	200	 , 	30	);
insert into tmp_street_list (id_street, min, max, id_area) values (	13	 , 151, 	200	 , 	31	);
insert into tmp_street_list (id_street, min, max, id_area) values (	14	 , 151, 	200	 , 	32	);
insert into tmp_street_list (id_street, min, max, id_area) values (	15	 , 151, 	200	 , 	33	);
insert into tmp_street_list (id_street, min, max, id_area) values (	16	 , 151, 	200	 , 	34	);
insert into tmp_street_list (id_street, min, max, id_area) values (	17	 , 151, 	200	 , 	35	);
insert into tmp_street_list (id_street, min, max, id_area) values (	18	 , 151, 	200	 , 	34	);
insert into tmp_street_list (id_street, min, max, id_area) values (	19	 , 151, 	200	 , 	33	);
insert into tmp_street_list (id_street, min, max, id_area) values (	20	 , 151, 	200	 , 	32	);

--дополнительные улицы +43 шт.







--шаблон адреса

create table tmp_address_list (id_dsa integer GENERATED ALWAYS AS IDENTITY PRIMARY KEY, id_street integer, id_area integer, num_dom integer);

--insert into tmp_address_list (id_street, id_area, num_dom) values

-- tmp_street_list - 115 записей
-- tmp_address_list - 5332 записи

do $$
declare l_id_street integer;
		l_id_area integer;
		l_num_dom integer;
		l_min integer;
		l_max integer;
ii integer =0;
jj integer =0;
begin
for l_id_street, l_min, l_max, l_id_area in select t.id_street, t.min, t.max, t.id_area from tmp_street_list t order by t.id_sa
loop
	raise notice 'Цикл 1: % % % %', l_id_street, l_id_area, l_min, l_max;
	
	jj=0;
	
	while jj<(l_max -l_min+1) loop
		
		l_num_dom=l_min+jj;
		
		raise notice 'Цикл 2: % % %', l_id_street, l_id_area, l_num_dom;
		
		insert into tmp_address_list (id_street, id_area, num_dom) values (l_id_street, l_id_area, l_num_dom);
		
		jj=jj+1;	
		
	end loop;
		
end loop;
end$$;


--список квартир из tmp_address_list

create table tmp_kv_list (id_kv integer GENERATED ALWAYS AS IDENTITY PRIMARY KEY, id_street integer, id_area integer, num_dom integer, num_kv integer);


do $$
declare l_id_street integer;
		l_id_area integer;
		l_num_dom integer;
		l_num_kv integer;
		l_min integer;
		l_max integer;
jj integer =0;
begin
for l_id_street, l_id_area, l_num_dom in select id_street, id_area, num_dom from tmp_address_list order by id_dsa

loop
	raise notice 'Цикл 1: % % %', l_id_street, l_id_area, l_num_dom;
	
	jj=0;
	l_min=1;
	l_max=floor(random()*200+50)::integer;
	
	while jj<=l_max loop
		
		l_num_kv=l_min+jj;
		
		raise notice 'Цикл 2: % % % %', l_id_street, l_id_area, l_num_dom, l_num_kv;
		
		insert into tmp_kv_list (id_street, id_area, num_dom, num_kv) values (l_id_street, l_id_area, l_num_dom, l_num_kv);
		
		jj=jj+1;	
		
	end loop;
		
end loop;
end$$;


--список квартир из address

drop table tmp_kv_list;

create table tmp_kv_list (id_kv integer GENERATED ALWAYS AS IDENTITY PRIMARY KEY, id_address integer, id_area integer, id_street integer, num_dom integer, num_kv integer);

do $$
declare l_id_street integer;
		l_id_area integer;
		l_num_dom integer;
		l_num_kv integer;
		l_id_address integer;
		l_min integer;
		l_max integer;
jj integer =0;
begin
for l_id_address, l_id_area, l_id_street, l_num_dom in select id_address, id_area, id_street, num_dom from address order by id_address

loop
	raise notice 'Цикл 1: % % % %', l_id_address,  l_id_area, l_id_street, l_num_dom;
	
	jj=0;
	l_min=1;
	l_max=floor(random()*200+50)::integer;
	
	while jj<=l_max loop
		
		l_num_kv=l_min+jj;
		
		raise notice 'Цикл 2: % % % % %', l_id_address, l_id_area, l_id_street, l_num_dom, l_num_kv;
		
		insert into tmp_kv_list (id_address, id_area, id_street, num_dom, num_kv) values (l_id_address, l_id_area, l_id_street, l_num_dom, l_num_kv);
		
		jj=jj+1;	
		
	end loop;
		
end loop;
end$$;



--группы учёта
insert into reg_group (id_reg_group, name_reg_group) values (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5');


--контингент
insert into contingent (id_cont, name_cont) values (1, '1'), (2, '2'), (3, '3'), (4, '4');

truncate table contingent;

insert into contingent (id_cont, name_cont) values
(1, 'пенсионер'),
(2, 'инвалид ВОВ'),
(3, 'участник ВОВ'),
(4, 'вдова участника ВОВ'),
(5, 'блокадник'),
(6, 'награждённый орденами и медалями'),
(7, 'инвалид труда'),
(8, 'ребёнок-инвалид'),
(9, 'участник боевых действий'),
(10, 'член семьи погибшего'),
(11, 'подвергшийся радиационному облучению'),
(12, 'реабилитированный'),
(13, 'подросток'),
(14, 'призывник'),
(15, 'ребёнок до года'),
(16, 'прочие')
;


--места работы пациентов
create table tmp_organization (id_org integer GENERATED ALWAYS AS IDENTITY PRIMARY KEY, name_org char (32));

insert into tmp_organization (name_org) values ('North Antelope Rochelle'),
							('Black Thunder'),
							('Antelope'),
							('Cordero Rojo'),
							('Eagle Butte'),
							('Belle Ayr'),
							('Spring Creek'),
							('Rawhide'),
							('Freedom');


--должности пациентов
create table tmp_position (id_pos integer GENERATED ALWAYS AS IDENTITY PRIMARY KEY, name_pos char (24));

insert into tmp_position (name_pos) values ('директор'),
											('горный инженер'),
											('бухгалтер'),
											('экономист'),
											('взрывник'),
											('машинист бульдозера'),
											('водитель самосвала'),
											('машинист экскаватора'),
											('машинист тепловоза'),
											('техник'),
											('инженер'),
											('разнорабочий');



--амбулаторные карты



--date create 
select '2014-01-01'::date + ((random() *356 +1)*floor(random()*9+1))::integer from generate_series (1, 50);

--b_date
select '1944-01-01'::date + ((random() *356 +1)*floor(random()*80+1))::integer from generate_series (1, 50);


do $$
declare l_fam char(18);
		l_id_fam integer;
		l_name char(15);
		l_id_name integer;
		l_otch char(18);
		l_id_otch integer;
		l_b_date date;
		l_pol char(1);
		l_id_address integer;
		l_num_kv integer;
		l_num_tel integer;
		l_id_cont integer;
		l_organization char(32);
		l_id_org integer;
		l_position char(24);
		l_id_pos integer;
		l_ser_polis char(2);
		l_num_polis integer;
		l_id_reg_group integer;
		l_create_date date;
		l_cnt integer;
jj integer =0;
begin
for l_id_address, l_num_kv in select a.id_address, a.num_kv from tmp_kv_list a order by 1, 2
loop
	select (random() *6 +1)::integer into l_cnt;
	select floor(random()*160+1)::integer into l_id_fam;
	
	select floor(random()*899999+100000)::integer into l_num_tel;
			
	jj=0;
	
	while jj < l_cnt loop
		select floor(random()*120+74)::integer into l_id_name;
		select n.str_name, n.pol from tmp_name_list n where n.id_name=l_id_name into l_name, l_pol;
		select floor(random()*90+1)::integer into l_id_otch;
		case l_pol
		when 'ж' then select f.str_fam_f from tmp_fam_list f where f.id_fam=l_id_fam into l_fam;
					select o.str_otch_f from tmp_otch_list o where o.id_otch=l_id_otch into l_otch;
		else select f.str_fam_m from tmp_fam_list f where f.id_fam=l_id_fam into l_fam;
			select o.str_otch_m from tmp_otch_list o where o.id_otch=l_id_otch into l_otch;
		end case;
		
		select '1944-01-01'::date + ((random() *356 +1)*floor(random()*80+1))::integer into l_b_date;
		
		select floor(random()*16+1)::integer into l_id_cont;
		
		select floor(random()*9+1)::integer into l_id_org;
		select torg.name_org from tmp_organization torg where torg.id_org=l_id_org into l_organization;
		
		select floor(random()*12+1)::integer into l_id_pos;
		select tp.name_pos from tmp_position tp where tp.id_pos=l_id_pos into l_position;
		
		
		select left(gen_random_uuid()::text, 2) into l_ser_polis;
		select floor(random()*899999+100000)::integer into l_num_polis;
		
		select floor(random()*5+1)::integer into l_id_reg_group;
		
		select '2014-01-01'::date + ((random() *356 +1)*floor(random()*9+1))::integer into l_create_date;
		
		
		raise notice '% % % % % % % % % % % % % % %', l_fam, l_name, l_otch, l_b_date, l_pol, l_id_address, l_num_kv, l_num_tel, l_id_cont, l_organization, l_position, l_ser_polis, l_num_polis, l_id_reg_group, l_create_date;   
		
		insert into amb_card (fam_patient, name_patient, otch_patient, b_date, pol, id_address, num_kv, num_tel, id_cont, organization, position, ser_polis, num_polis, id_reg_group, create_date) values (l_fam, l_name, l_otch, l_b_date, l_pol, l_id_address, l_num_kv, l_num_tel, l_id_cont, l_organization, l_position, l_ser_polis, l_num_polis, l_id_reg_group, l_create_date);
		
		jj=jj+1;		
				
	end loop;
end loop;

end$$;


-- группа до 10 лет -> b_date + 80 лет
 update amb_card set b_date=b_date-28400 where extract(year from age(b_date))<=10;  

-- до 15 -> + 30;
update amb_card set b_date=b_date-10650 where extract(year from age(b_date))<=15;


-- 65-80 -> -20
update amb_card set b_date=b_date+7100 where extract(year from age(b_date)) between 65 and 80;

-- обратно часть 65-80
do $$
declare l_b_date date;
		l_id_card integer;
		l_old integer;
		l_cnt integer;
		
jj integer =0;
begin
for l_id_card, l_b_date in select a.id_card, a.b_date from amb_card a  where extract(year from age(b_date)) between 45 and 64
loop
	select floor(random()*5+1)::integer into l_cnt;
	if l_cnt=1 then 
		update amb_card set b_date=b_date-7100 where id_card=l_id_card;
	end if;	
end loop;
end$$;

-- часть в 20-40
do $$
declare l_b_date date;
		l_id_card integer;
		l_old integer;
		l_cnt integer;
		
jj integer =0;
begin
for l_id_card, l_b_date in select a.id_card, a.b_date from amb_card a  where extract(year from age(b_date)) between 45 and 64
loop
	select floor(random()*5+1)::integer into l_cnt;
	if l_cnt=3 then 
		update amb_card set b_date=b_date+7100 where id_card=l_id_card;
	end if;	
end loop;
end$$;

-- часть в 30-40
do $$
declare l_b_date date;
		l_id_card integer;
		l_old integer;
		l_cnt integer;
begin
for l_id_card, l_b_date in select a.id_card, a.b_date from amb_card a  where extract(year from age(b_date)) between 51 and 60
loop
	select floor(random()*3+1)::integer into l_cnt;
	if l_cnt=2 then 
		update amb_card set b_date=b_date+7100 where id_card=l_id_card;
	end if;	
end loop;
end$$;

-- часть в 90+
do $$
declare l_b_date date;
		l_id_card integer;
		l_old integer;
		l_cnt integer;
begin
for l_id_card, l_b_date in select a.id_card, a.b_date from amb_card a  where extract(year from age(b_date)) between 71 and 80
loop
	select floor(random()*5+1)::integer into l_cnt;
	if l_cnt=4 then 
		
		--raise notice '% % %', l_b_date, l_b_date-7300, extract(year from age(l_b_date+7300)); 
		
		update amb_card set b_date=b_date-7300 where id_card=l_id_card;
		
	end if;	
end loop;
end$$;


-- часть в 71-80
do $$
declare l_b_date date;
		l_id_card integer;
		l_old integer;
		l_cnt integer;
begin
for l_id_card, l_b_date in select a.id_card, a.b_date from amb_card a  where extract(year from age(b_date)) between 61 and 70
loop
	select floor(random()*4+1)::integer into l_cnt;
	if l_cnt=2 then 
		
		update amb_card set b_date=b_date-3650 where id_card=l_id_card;
		
	end if;	
end loop;
end$$;


-- часть в 81-90
do $$
declare l_b_date date;
		l_id_card integer;
		l_old integer;
		l_cnt integer;
begin
for l_id_card, l_b_date in select a.id_card, a.b_date from amb_card a  where extract(year from age(b_date)) between 71 and 80
loop
	select floor(random()*5+1)::integer into l_cnt;
	if l_cnt=3 then 
		
		update amb_card set b_date=b_date-3650 where id_card=l_id_card;
		
	end if;	
end loop;
end$$;



--корректировка контингентов

update amb_card set id_cont=16 where id_cont=15;	--UPDATE 401660

update amb_card set id_cont=16 where id_cont=13 and extract(year from age(b_date))>=18;  --UPDATE 398782

update amb_card set id_cont=13 where id_cont not in (13, 8, 10) and extract(year from age(b_date))<18;	--UPDATE 28747

update amb_card set id_cont=16 where id_cont in (2, 3, 4, 5, 12) and b_date>'1945-05-09';	--UPDATE 1905948

update amb_card set id_cont=16 where id_cont=4 and pol='м';		--UPDATE 12939

--7
do $$
declare l_id_card integer;
		l_id_cont integer;
		l_cnt integer;
		
jj integer =0;
begin
for l_id_card, l_id_cont in select a.id_card, a.id_cont from amb_card a  where id_cont=7
loop
	select floor(random()*2+1)::integer into l_cnt;
	if l_cnt=1 then 
		update amb_card set id_cont=16 where id_card=l_id_card;
	end if;	
end loop;
end$$;


--8
do $$
declare l_id_card integer;
		l_id_cont integer;
		l_cnt integer;
		
jj integer =0;
begin
for l_id_card, l_id_cont in select a.id_card, a.id_cont from amb_card a  where id_cont=8
loop
	select floor(random()*4+1)::integer into l_cnt;
	if l_cnt<>1 then 
		update amb_card set id_cont=16 where id_card=l_id_card;
	end if;	
end loop;
end$$;


--14
update amb_card set id_cont=16 where id_cont=14 and extract(year from age(b_date))>27;	--UPDATE 378698

update amb_card set id_cont=14 where id_cont=16 and extract(year from age(b_date)) between 18 and 27;	--UPDATE 245935


--10
do $$
declare l_id_card integer;
		l_id_cont integer;
		l_cnt integer;
		
jj integer =0;
begin
for l_id_card, l_id_cont in select a.id_card, a.id_cont from amb_card a  where id_cont=10
loop
	select floor(random()*3+1)::integer into l_cnt;
	if l_cnt<>1 then 
		update amb_card set id_cont=16 where id_card=l_id_card;
	end if;	
end loop;
end$$;

--1
do $$
declare l_b_date date;
		l_id_card integer;
		l_id_cont integer;
		l_old integer;
		l_pol char(1);
		
jj integer =0;
begin
for l_id_card, l_id_cont, l_b_date, l_pol in select a.id_card, a.id_cont, a.b_date, a.pol from amb_card a where id_cont=1
loop
	l_old=extract(year from age(l_b_date));
	if (l_pol='ж' and l_old<60) or (l_pol='м' and l_old<65) then 
		update amb_card set id_cont=16 where id_card=l_id_card;
	end if;	
end loop;
end$$;



do $$
declare l_b_date date;
		l_id_card integer;
		l_id_cont integer;
		l_old integer;
		l_pol char(1);
		
jj integer =0;
begin
for l_id_card, l_id_cont, l_b_date, l_pol in select a.id_card, a.id_cont, a.b_date, a.pol from amb_card a where id_cont=16
loop
	l_old=extract(year from age(l_b_date));
	if (l_pol='ж' and l_old>60) or (l_pol='м' and l_old>65) then 
		update amb_card set id_cont=1 where id_card=l_id_card;
	end if;	
end loop;
end$$;


--11
update amb_card set id_cont=16 where id_cont=11 and b_date>'1986-04-26';	--UPDATE 74518





-- ZAB_TYPE

insert into zab_type (id_zab_type, name_zab_type) values 
(1, 'острое заболевание'),
(2, 'впервые в жизни зарегистрированное хроническое'),
(3, 'известное ранее хроническое'),
(4, 'обострение хронического заболевания')
;


--TARGET_SPO

insert into target_spo (id_target, name_target) values
(1, 'лечебно-диагностическая'),
(2, 'консультативная'),
(3, 'диспансерное наблюдение'),
(4, 'профилактический осмотр'),
(5, 'медико-социальная'),
(6, 'прочее')
;




--DOC_TYPE_LIST

insert into doc_type_list (name_doc_type) values
('листок нетрудоспособности'),
('справка ф. 095-у'),
('выписка из амбулаторной карты ф. 027')
;


--HOSPITAL_LIST

insert into hospital_list (type_hospital) values
('Больница №1'),
('Больница №2'),
('Больница №3'),
('Больница №4'),
('Больница №5')
;


--AGE_GROUP

insert into age_group (from_age, to_age, name_age_group) values
(18, 44, 'молодой возраст'),
(45, 59, 'средний возраст'),
(60, 74, 'пожилой возраст'),
(75, 90, 'старческий возраст'),
(90, 900, 'долголетие'),
(0, 17, 'дети и подростки')
;


--VISIT_TYPE

insert into visit_type (id_visit_type, name_visit_type) values
(1, 'в ЛПУ'),
(2, 'на дому');



--PERIOD_TYPE_LIST
create table period_type_list (id_period_type integer GENERATED ALWAYS AS IDENTITY PRIMARY KEY, name_period_type char(64), begin_month integer, end_month integer);

insert into period_type_list (name_period_type, begin_month, end_month) values
('Январь', 1, 1),
('Февраль', 2, 2),
('Март', 3, 3),
('Апрель', 4, 4),
('Май', 5, 5),
('Июнь', 6, 6),
('Июль', 7, 7),
('Август', 8, 8),
('Сентябрь', 9, 9),
('Октябрь', 10, 10),
('Ноябрь', 11, 11),
('Декабрь', 12, 12),
('Январь-Февраль', 1, 2),
('Январь-Март', 1, 3),
('Январь-Апрель', 1, 4),
('Январь-Май', 1, 5),
('Январь-Июнь', 1, 6),
('Январь-Июль', 1, 7),
('Январь-Август', 1, 8),
('Январь-Сентябрь', 1, 9),
('Январь-Октябрь', 1, 10),
('Январь-Ноябрь', 1, 11),
('Январь-Декабрь', 1, 12),
('I квартал', 1, 3),
('II квартал', 4, 6),
('III квартал', 7, 9),
('IV квартал', 10, 12),
('I полугодие', 1, 6),
('II полугодие', 7, 12),
('год', 1, 12)
;


--PERIOD_LIST
do $$
declare l_name char(64);
		l_begin_month integer;
		l_end_month integer;
		l_begin date;
		l_end date;
		l_year integer;
jj integer =0; 		
begin
l_year=2016;

while jj<9 loop
	
	for l_name, l_begin_month, l_end_month in select name_period_type, begin_month, end_month from period_type_list order by id_period_type
	loop
		case l_name
		when 'год' then l_name=''||l_year||' год';
		else l_name=l_name||' '||l_year||' года';
		end case;
		
		l_begin=(''||l_year||'-'||l_begin_month||'-01')::date;
		
		case l_end_month
		when 12 then l_end=(''||l_year+1||'-01-01')::date;
		else l_end=(''||l_year||'-'||l_begin_month+1||'-01')::date;
		end case;
		
		raise notice '% % %', l_name, l_begin, l_end;
		
		insert into period_list (name_period, begin_period, end_period) values (l_name, l_begin, l_end);
		
	end loop;
	
	l_year=l_year+1;
	jj=jj+1;
	
end loop;

end$$;







