\c clinic_db

SET search_path = clinic_schema, public;


--СПИСОК УЧАСТКОВ

select a.id_area, s.fam_doctor, s.name_doctor, s.otch_doctor from area a left join doctor d on a.id_doctor=d.id_doctor left join staff s on d.id_staff=s.id_staff order by a.id_area;

 id_area | fam_doctor | name_doctor |  otch_doctor
---------+------------+-------------+---------------
       1 | Генрин     | Кори        | Эвардович
       2 | Бридлавин  | Йен         | Эдвинович
       3 | Моссова    | Габриэль    | Сигмундовна
       4 | Мэрионов   | Нил         | Хубертович
       5 | Ависов     | Эллиот      | Эдвинович
       6 | Прайорина  | Джоан       | Эндрювна
       7 | Беллов     | Себастиан   | Андерсонович
       8 | Грабин     | Винсент     | Альбертович
       9 | Кулиджин   | Адриан      | Франклинович
      10 | Байденова  | Элис        | Чэдовна
      11 | Кларкова   | Джульет     | Остиновна
      12 | Кларков    | Джошуа      | Томасович
      13 | Джейкобсин | Эвард       | Арнольдович
      14 | Мелодинов  | Уильям      | Джасперович
      15 | Реднаппов  | Винсент     | Томасович
      16 | Рендольфов | Бернард     | Вейнович
      17 | Найтлин    | Винсент     | Гарольдович
      18 | Ридин      | Винсент     | Лестерович
      19 | Крузин     | Кевин       | Тревисович
      20 | Джонсонов  | Велентайн   | Тимотивич
      21 | Мурманова  | Грэйс       | Андерсоновна
      22 | Мерсеров   | Себастиан   | Уильямович
      23 | Нотлин     | Феликс      | Франклинович
      24 | Картеров   | Нейтен      | Винсентович
      25 | Моэмов     | Даррен      | Себастианович
      26 | Бьюкененов | Эвард       | Дугласович
      27 | Принсов    | Якоб        | Майклович
      28 | Пиннерин   | Мартин      | Вилфредович
      29 | Борденов   | Себастиан   | Вилфредович
      30 | Ридов      | Лестер      | Себастианович
      31 | Бушов      | Дуглас      | Мартинович
      32 | Кейсин     | Вилфред     | Генривич
      33 | Пауэрсов   | Кевин       | Эрлович
      34 | Пиннерин   | Винстон     | Эрлович
      35 | Болдуинов  | Теренс      | Скоттович
(35 rows)


--СПИСОК ВРАЧЕЙ СО СПЕЦИАЛЬНОСТЯМИ И УЧАСТКАМИ

 select d.id_doctor, s.fam_doctor, s.name_doctor, s.otch_doctor, sp.name_spec, a.id_area from doctor d left join staff s on d.id_staff=s.id_staff left join speciality sp on d.id_spec=sp.id_spec left join area a on d.id_doctor=a.id_doctor order by s.fam_doctor, s.name_doctor, s.otch_doctor;

 id_doctor |  fam_doctor   | name_doctor |  otch_doctor  |  name_spec  | id_area
-----------+---------------+-------------+---------------+-------------+---------
         5 | Ависов        | Эллиот      | Эдвинович     | терапевт    |       5
        10 | Байденова     | Элис        | Чэдовна       | терапевт    |      10
         7 | Беллов        | Себастиан   | Андерсонович  | терапевт    |       7
        35 | Болдуинов     | Теренс      | Скоттович     | терапевт    |      35
        29 | Борденов      | Себастиан   | Вилфредович   | терапевт    |      29
         2 | Бридлавин     | Йен         | Эдвинович     | терапевт    |       2
        31 | Бушов         | Дуглас      | Мартинович    | терапевт    |      31
        26 | Бьюкененов    | Эвард       | Дугласович    | терапевт    |      26
        45 | Вудвордин     | Самуэль     | Абрахамович   | травматолог |
         1 | Генрин        | Кори        | Эвардович     | терапевт    |       1
         8 | Грабин        | Винсент     | Альбертович   | терапевт    |       8
        13 | Джейкобсин    | Эвард       | Арнольдович   | терапевт    |      13
        20 | Джонсонов     | Велентайн   | Тимотивич     | терапевт    |      20
        24 | Картеров      | Нейтен      | Винсентович   | терапевт    |      24
        44 | Картрайтов    | Клиффорд    | Коривич       | травматолог |
        32 | Кейсин        | Вилфред     | Генривич      | терапевт    |      32
        12 | Кларков       | Джошуа      | Томасович     | терапевт    |      12
        11 | Кларкова      | Джульет     | Остиновна     | терапевт    |      11
        39 | Колинова      | Валери      | Дэвидовна     | хирург      |
        38 | Кортнин       | Тревис      | Лукасович     | хирург      |
        48 | Крисов        | Дэвид       | Якобович      | травматолог |
        41 | Крисов        | Эдвин       | Джасперович   | хирург      |
        19 | Крузин        | Кевин       | Тревисович    | терапевт    |      19
        40 | Кубриков      | Энтони      | Лоуренсович   | хирург      |
         9 | Кулиджин      | Адриан      | Франклинович  | терапевт    |       9
        43 | Лавкрафтов    | Оскар       | Кристоферович | хирург      |
        50 | Ларамина      | Агнес       | Бенджаминовна | травматолог |
        14 | Мелодинов     | Уильям      | Джасперович   | терапевт    |      14
        22 | Мерсеров      | Себастиан   | Уильямович    | терапевт    |      22
         3 | Моссова       | Габриэль    | Сигмундовна   | терапевт    |       3
        25 | Моэмов        | Даррен      | Себастианович | терапевт    |      25
        21 | Мурманова     | Грэйс       | Андерсоновна  | терапевт    |      21
        42 | Мэдисонова    | Ариэль      | Тобиасовна    | хирург      |
         4 | Мэрионов      | Нил         | Хубертович    | терапевт    |       4
        17 | Найтлин       | Винсент     | Гарольдович   | терапевт    |      17
        23 | Нотлин        | Феликс      | Франклинович  | терапевт    |      23
        37 | Ноэльнин      | Теренс      | Бернардович   | хирург      |
        46 | Пальмерстонов | Оливер      | Стивенович    | травматолог |
        33 | Пауэрсов      | Кевин       | Эрлович       | терапевт    |      33
        34 | Пиннерин      | Винстон     | Эрлович       | терапевт    |      34
        28 | Пиннерин      | Мартин      | Вилфредович   | терапевт    |      28
         6 | Прайорина     | Джоан       | Эндрювна      | терапевт    |       6
        27 | Принсов       | Якоб        | Майклович     | терапевт    |      27
        36 | Рандолфин     | Тристан     | Арнольдович   | хирург      |
        15 | Реднаппов     | Винсент     | Томасович     | терапевт    |      15
        47 | Реднаппов     | Дональд     | Гарольдович   | травматолог |
        16 | Рендольфов    | Бернард     | Вейнович      | терапевт    |      16
        18 | Ридин         | Винсент     | Лестерович    | терапевт    |      18
        30 | Ридов         | Лестер      | Себастианович | терапевт    |      30
        49 | Рунин         | Эндрю       | Эдгарович     | травматолог |
(50 rows)



--АДРЕСА ПО УЧАСТКАМИ

do $$
declare l_id_area integer;
		l_id_street integer;
		l_name_street char(20);
		l_num_dom integer;
		l_nums text;
		l_min integer;
		l_max integer;
ii integer =0;
begin
	for l_id_street, l_name_street, l_id_area in select distinct s.id_street, s.name_street || ' ' || s.type_street, ad.id_area from street s join address ad on s.id_street=ad.id_street order by 3, 2
	loop
		l_nums='';
		for l_num_dom in select d.num_dom from address d where d.id_street=l_id_street and d.id_area=l_id_area order by 1
		loop
			l_nums=l_nums || ', ' || l_num_dom;		

		end loop;
		
		raise notice '% % %', l_id_area, l_name_street, right(l_nums, -2);		
	end loop;
end$$;


--возраст

select count(*) from amb_card where extract(year from age(b_date))<=10;

select extract(year from age(b_date)), count(id_card) from amb_card group by 1;

select extract(year from age(b_date)), count(id_card) from amb_card where extract(year from age(b_date))>90 group by 1;



do $$
declare l_0_10 integer;
		l_11_18 integer;
		l_19_20 integer;
		l_21_30 integer;
		l_31_40 integer;
		l_41_50 integer;
		l_51_60 integer;
		l_61_70 integer;
		l_71_80 integer;
		l_81_90 integer;
		l_91_100 integer;
		l_101 integer;
		l_min integer;
		l_max integer;
		l_b_date date;
		l_now date;
		l_old integer;
ii integer =0;
begin
select now()::date into l_now;
l_0_10=0;
l_11_18=0;
l_19_20=0;
l_21_30=0;
l_31_40=0;
l_41_50=0;
l_51_60=0;
l_61_70=0;
l_71_80=0;
l_81_90=0;
l_91_100=0;
l_101=0;
l_min=110;
l_max=0;

for l_b_date in select ac.b_date from amb_card ac loop
	--l_old=(l_now-l_b_date)/355;
	l_old=extract(year from age(l_b_date));
	
	if l_old<l_min then l_min=l_old; end if;
	if l_old>l_max then l_max=l_old; end if;
	
	case 
	when l_old<11 then l_0_10=l_0_10+1;
	when l_old<19 then l_11_18=l_11_18+1;
	when l_old<21 then l_19_20=l_19_20+1;
	when l_old<31 then l_21_30=l_21_30+1;
	when l_old<41 then l_31_40=l_31_40+1;
	when l_old<51 then l_41_50=l_41_50+1;
	when l_old<61 then l_51_60=l_51_60+1;
	when l_old<71 then l_61_70=l_61_70+1;
	when l_old<81 then l_71_80=l_71_80+1;
	when l_old<91 then l_81_90=l_81_90+1;
	when l_old<101 then l_91_100=l_91_100+1;
	else l_101=l_101+1;
	end case;
end loop;

raise notice '00-10: %', l_0_10;
raise notice '11-18: %', l_11_18;
raise notice '19-20: %', l_19_20;
raise notice '21-30: %', l_21_30;
raise notice '31-40: %', l_31_40;
raise notice '41-50: %', l_41_50;
raise notice '51-60: %', l_51_60;
raise notice '61-70: %', l_61_70;
raise notice '71-80: %', l_71_80;
raise notice '81-90: %', l_81_90;
raise notice '91-100: %', l_91_100;
raise notice '>=101: %', l_101;
raise notice 'min: %', l_min;
raise notice 'max: %', l_max; 

end$$;


--по группам статистики

do $$
declare l_0_17 integer;
		l_18_44 integer;
		l_45_59 integer;
		l_60_74 integer;
		l_75_90 integer;
		l_91 integer;
		l_min integer;
		l_max integer;
		l_b_date date;
		l_now date;
		l_old integer;
ii integer =0;
begin
select now()::date into l_now;
l_0_17=0;
l_18_44=0;
l_45_59=0;
l_60_74=0;
l_75_90=0;
l_91=0;
l_min=110;
l_max=0;

for l_b_date in select ac.b_date from amb_card ac loop
	--l_old=(l_now-l_b_date)/355;
	l_old=extract(year from age(l_b_date));
	
	if l_old<l_min then l_min=l_old; end if;
	if l_old>l_max then l_max=l_old; end if;
	
	case 
	when l_old<18 then l_0_17=l_0_17+1;
	when l_old<45 then l_18_44=l_18_44+1;
	when l_old<60 then l_45_59=l_45_59+1;
	when l_old<75 then l_60_74=l_60_74+1;
	when l_old<91 then l_75_90=l_75_90+1;
	else l_91=l_91+1;
	end case;
end loop;

raise notice '00-17: %', l_0_17;
raise notice '18-44: %', l_18_44;
raise notice '45-59: %', l_45_59;
raise notice '60-74: %', l_60_74;
raise notice '75-90: %', l_75_90;
raise notice '>90: %', l_91;
raise notice 'min: %', l_min;
raise notice 'max: %', l_max; 

end$$;





--контингенты
select id_cont, count(id_card) from amb_card group by 1;

select id_cont, extract(year from age(b_date)), count(id_card) from amb_card group by 1, 2;


--полис (дубли)

--select distinct ser_polis||' '||num_polis, count(*) from amb_card group by 1 order by 2;

do $$
declare l_polis text;
		l_cnt integer;
begin
for l_polis, l_cnt in select distinct ser_polis||' '||num_polis, count(*) from amb_card group by 1
loop
	if l_cnt>1 then 
		raise notice '% %', l_cnt, l_polis;
	end if;	
end loop;
end$$;


--
select distinct extract(year from t.open_date), count(t.id_card) from talon t group by 1;


--
select distinct (case when t.type_spo=1 then 'первичный' when t.type_spo=2 then 'повторный' end) as type_spo,
                (case when t.spo=1 then 'законченный' when t.spo=2 then 'незаконченный' end) as spo,
				count(t.id_talon)
from talon t where t.open_date>'2023-12-31' group by 1, 2;


---
select distinct extract(year from t.open_date), count(distinct t.id_card) from talon t group by 1;

----------
--талоны--
----------

do $$
declare l_id_card integer;
		l_id_target integer;
		l_type_spo integer;
		l_spo integer;
		l_close_date date;
		l_date date;
		l_begin date;
		l_end date;
		l_year integer;
		l_cnt integer;
		l_id_talon integer;
		--
		l_id_visit_type integer;
		l_id_zab_type integer;
		l_id_doctor integer;
		l_id_spec integer;
		l_type_spec boolean;
		l_id_mkb char(3);
		l_next_date date;
		l_id_visit integer;
		
ii integer =0;
jj integer =0;
begin
for l_id_card in select a.id_card from amb_card a 
loop
	l_year=2020;
	ii=0;
	
	while ii<9 loop
		jj=0;
		l_begin=(''||l_year||'-01-01')::date;
		l_end=(''||l_year+1||'-01-01')::date;
		
		select (random() *12 +1)::integer into l_cnt;
	
		while jj<l_cnt loop
			select l_begin::date + (random() *356 +1)::integer into l_date;
			select floor(random()*6+1)::integer into l_id_target;
			select floor(random()*2+1)::integer into l_type_spo;
			
			case l_id_target
			when 1 then select floor(random()*2+1)::integer into l_spo;
			else l_spo=1;
			end case;
			
			if l_spo=1 then l_close_date=l_date;
			else l_close_date=null;
			end if;
			
			raise notice '% % % % % % %', l_id_card, l_id_target, l_type_spo, l_spo, l_date date, l_close_date, l_date;
			
			insert into talon (id_card, id_target, type_spo, spo, close_date, open_date) values (l_id_card, l_id_target, l_type_spo, l_spo, l_close_date, l_date) returning id_talon into l_id_talon;
			commit;
			
			
			select floor(random()*2+1)::integer into l_id_visit_type;
			select floor(random()*4+1)::integer into l_id_zab_type;
			select floor(random()*50+1)::integer into l_id_doctor;
			select d.id_spec from doctor d where d.id_doctor=l_id_doctor into l_id_spec;
			select s.type_spec from speciality s where s.id_spec=l_id_spec into l_type_spec;
			select m.id_mkb from tmp_mkb m where m.id_spec=l_id_spec order by random() limit 1 into l_id_mkb;
						
			case l_spo
			when 2 then l_next_date=l_date+4;
			else l_next_date=null;
			end case;
			
			raise notice 'VISIT: % *** % % % % % % %', l_id_talon, l_id_visit_type, l_id_zab_type, l_id_doctor, l_id_spec, l_type_spec, l_id_mkb, l_next_date;
			
			insert into visit (id_talon, visit_date, id_visit_type, id_zab_type, id_doctor, id_mkb, next_date) values (l_id_talon, l_date, l_id_visit_type, l_id_zab_type, l_id_doctor, l_id_mkb, l_next_date) returning id_visit into l_id_visit;
			commit;
			
			
			jj=jj+1;
			
		end loop;
	
		l_year=l_year+1;
		ii=ii+1;
	end loop;	

end loop;
end$$;


-------------
do $$
declare l_id_card integer;
		l_id_target integer;
		l_type_spo integer;
		l_spo integer;
		l_close_date date;
		l_date date;
		l_begin date;
		l_end date;
		l_year integer;
		l_cnt integer;
		l_id_talon integer;
		--
		l_id_visit_type integer;
		l_id_zab_type integer;
		l_id_doctor integer;
		l_id_spec integer;
		l_type_spec boolean;
		l_id_mkb char(3);
		l_next_date date;
		l_id_visit integer;
		
ii integer =0;
jj integer =0;
begin
for l_id_card in select a.id_card from amb_card a order by a.id_card
loop
	l_year=2020;
	ii=0;
	
	while ii<5 loop
		jj=0;
		l_begin=(''||l_year||'-01-01')::date;
		l_end=(''||l_year+1||'-01-01')::date;
		if (l_begin='2024-01-01'::date) and (l_end>'2024-05-17'::date) then l_end='2024-05-17'::date;
		end if;		

		select (random() *6 +1)::integer into l_cnt;
	
		while jj<l_cnt loop
			select l_begin::date + (random() *356 +1)::integer into l_date;
			select floor(random()*6+1)::integer into l_id_target;
			select floor(random()*2+1)::integer into l_type_spo;
			
			case l_id_target
			when 1 then select floor(random()*2+1)::integer into l_spo;
			else l_spo=1;
			end case;
			
			if l_spo=1 then l_close_date=l_date;
			else l_close_date=null;
			end if;
			
			raise notice '% % % % % % %', l_id_card, l_id_target, l_type_spo, l_spo, l_date date, l_close_date, l_date;
			
			insert into talon (id_card, id_target, type_spo, spo, close_date, open_date) values (l_id_card, l_id_target, l_type_spo, l_spo, l_close_date, l_date) returning id_talon into l_id_talon;
			commit;
			
			
			select floor(random()*2+1)::integer into l_id_visit_type;
			select floor(random()*4+1)::integer into l_id_zab_type;
			select floor(random()*50+1)::integer into l_id_doctor;
			select d.id_spec from doctor d where d.id_doctor=l_id_doctor into l_id_spec;
			select s.type_spec from speciality s where s.id_spec=l_id_spec into l_type_spec;
			select m.id_mkb from tmp_mkb m where m.id_spec=l_id_spec order by random() limit 1 into l_id_mkb;
						
			case l_spo
			when 2 then l_next_date=l_date+4;
			else l_next_date=null;
			end case;
			
			raise notice 'VISIT: % *** % % % % % % %', l_id_talon, l_id_visit_type, l_id_zab_type, l_id_doctor, l_id_spec, l_type_spec, l_id_mkb, l_next_date;
			
			insert into visit (id_talon, visit_date, id_visit_type, id_zab_type, id_doctor, id_mkb, next_date) values (l_id_talon, l_date, l_id_visit_type, l_id_zab_type, l_id_doctor, l_id_mkb, l_next_date) returning id_visit into l_id_visit;
			commit;
			
			
			jj=jj+1;
			
		end loop;
	
		l_year=l_year+1;
		ii=ii+1;
	end loop;	

end loop;
end$$;



-----

do $$
declare l_id_card integer;
		l_id_target integer;
		l_type_spo integer;
		l_spo integer;
		l_close_date date;
		l_date date;
		l_begin date;
		l_end date;
		l_year integer;
		l_cnt integer;
		l_id_talon integer;
		--
		l_id_visit_type integer;
		l_id_zab_type integer;
		l_id_doctor integer;
		l_id_spec integer;
		l_type_spec boolean;
		l_id_mkb char(3);
		l_next_date date;
		l_id_visit integer;
		
ii integer =0;
jj integer =0;
begin
for l_id_card in select a.id_card from amb_card a where a.id_card>6903312 order by a.id_card
loop
	l_year=2023;
	ii=0;
	
	while ii<1 loop
		jj=0;
		l_begin=(''||l_year||'-01-01')::date;
		l_end=(''||l_year+1||'-01-01')::date;
		if (l_begin='2024-01-01'::date) and (l_end>'2024-05-17'::date) then l_end='2024-05-17'::date;
		end if;		

		select (random() *6 +1)::integer into l_cnt;
	
		while jj<l_cnt loop
			select l_begin::date + (random() *356 +1)::integer into l_date;
			select floor(random()*6+1)::integer into l_id_target;
			select floor(random()*2+1)::integer into l_type_spo;
			
			case l_id_target
			when 1 then select floor(random()*2+1)::integer into l_spo;
			else l_spo=1;
			end case;
			
			if l_spo=1 then l_close_date=l_date;
			else l_close_date=null;
			end if;
			
			raise notice '% % % % % % %', l_id_card, l_id_target, l_type_spo, l_spo, l_date date, l_close_date, l_date;
			
			insert into talon (id_card, id_target, type_spo, spo, close_date, open_date) values (l_id_card, l_id_target, l_type_spo, l_spo, l_close_date, l_date) returning id_talon into l_id_talon;
			commit;
			
			
			select floor(random()*2+1)::integer into l_id_visit_type;
			select floor(random()*4+1)::integer into l_id_zab_type;
			select floor(random()*50+1)::integer into l_id_doctor;
			select d.id_spec from doctor d where d.id_doctor=l_id_doctor into l_id_spec;
			select s.type_spec from speciality s where s.id_spec=l_id_spec into l_type_spec;
			select m.id_mkb from tmp_mkb m where m.id_spec=l_id_spec order by random() limit 1 into l_id_mkb;
						
			case l_spo
			when 2 then l_next_date=l_date+4;
			else l_next_date=null;
			end case;
			
			raise notice 'VISIT: % *** % % % % % % %', l_id_talon, l_id_visit_type, l_id_zab_type, l_id_doctor, l_id_spec, l_type_spec, l_id_mkb, l_next_date;
			
			insert into visit (id_talon, visit_date, id_visit_type, id_zab_type, id_doctor, id_mkb, next_date) values (l_id_talon, l_date, l_id_visit_type, l_id_zab_type, l_id_doctor, l_id_mkb, l_next_date) returning id_visit into l_id_visit;
			commit;
			
			
			jj=jj+1;
			
		end loop;
	
		l_year=l_year+1;
		ii=ii+1;
	end loop;	

end loop;
end$$;


---

do $$
declare l_id_card integer;
		l_id_target integer;
		l_type_spo integer;
		l_spo integer;
		l_close_date date;
		l_date date;
		l_begin date;
		l_end date;
		l_year integer;
		l_cnt integer;
		l_id_talon integer;
		--
		l_id_visit_type integer;
		l_id_zab_type integer;
		l_id_doctor integer;
		l_id_spec integer;
		l_type_spec boolean;
		l_id_mkb char(3);
		l_next_date date;
		l_id_visit integer;
		
ii integer =0;
jj integer =0;
begin
for l_id_card in select a.id_card from amb_card a where a.id_card>12841842 order by a.id_card
loop
	l_year=2024;
	ii=0;
	
	while ii<1 loop
		jj=0;
		l_begin=(''||l_year||'-01-01')::date;
		l_end=(''||l_year+1||'-01-01')::date;
		if (l_begin='2024-01-01'::date) and (l_end>'2024-05-17'::date) then l_end='2024-05-17'::date;
		end if;		

		select (random() *6 +1)::integer into l_cnt;
	
		while jj<l_cnt loop
			select l_begin::date + (random() *356 +1)::integer into l_date;
			select floor(random()*6+1)::integer into l_id_target;
			select floor(random()*2+1)::integer into l_type_spo;
			
			case l_id_target
			when 1 then select floor(random()*2+1)::integer into l_spo;
			else l_spo=1;
			end case;
			
			if l_spo=1 then l_close_date=l_date;
			else l_close_date=null;
			end if;
			
			raise notice '% % % % % % %', l_id_card, l_id_target, l_type_spo, l_spo, l_date date, l_close_date, l_date;
			
			insert into talon (id_card, id_target, type_spo, spo, close_date, open_date) values (l_id_card, l_id_target, l_type_spo, l_spo, l_close_date, l_date) returning id_talon into l_id_talon;
			commit;
			
			
			select floor(random()*2+1)::integer into l_id_visit_type;
			select floor(random()*4+1)::integer into l_id_zab_type;
			select floor(random()*50+1)::integer into l_id_doctor;
			select d.id_spec from doctor d where d.id_doctor=l_id_doctor into l_id_spec;
			select s.type_spec from speciality s where s.id_spec=l_id_spec into l_type_spec;
			select m.id_mkb from tmp_mkb m where m.id_spec=l_id_spec order by random() limit 1 into l_id_mkb;
						
			case l_spo
			when 2 then l_next_date=l_date+4;
			else l_next_date=null;
			end case;
			
			raise notice 'VISIT: % *** % % % % % % %', l_id_talon, l_id_visit_type, l_id_zab_type, l_id_doctor, l_id_spec, l_type_spec, l_id_mkb, l_next_date;
			
			insert into visit (id_talon, visit_date, id_visit_type, id_zab_type, id_doctor, id_mkb, next_date) values (l_id_talon, l_date, l_id_visit_type, l_id_zab_type, l_id_doctor, l_id_mkb, l_next_date) returning id_visit into l_id_visit;
			commit;
			
			
			jj=jj+1;
			
		end loop;
	
		l_year=l_year+1;
		ii=ii+1;
	end loop;	

end loop;
end$$;



---

do $$
declare l_id_card integer;
		l_id_target integer;
		l_type_spo integer;
		l_spo integer;
		l_close_date date;
		l_date date;
		l_begin date;
		l_end date;
		l_year integer;
		l_cnt integer;
		l_id_talon integer;
		--
		l_id_visit_type integer;
		l_id_zab_type integer;
		l_id_doctor integer;
		l_id_spec integer;
		l_type_spec boolean;
		l_id_mkb char(3);
		l_next_date date;
		l_id_visit integer;
		
ii integer =0;
jj integer =0;
begin
for l_id_card in select a.id_card from amb_card a where a.id_card>9981350 order by a.id_card
loop
	l_year=2022;
	ii=0;
	
	while ii<1 loop
		jj=0;
		l_begin=(''||l_year||'-01-01')::date;
		l_end=(''||l_year+1||'-01-01')::date;
		if (l_begin='2024-01-01'::date) and (l_end>'2024-05-17'::date) then l_end='2024-05-17'::date;
		end if;		

		select (random() *6 +1)::integer into l_cnt;
	
		while jj<l_cnt loop
			select l_begin::date + (random() *356 +1)::integer into l_date;
			select floor(random()*6+1)::integer into l_id_target;
			select floor(random()*2+1)::integer into l_type_spo;
			
			case l_id_target
			when 1 then select floor(random()*2+1)::integer into l_spo;
			else l_spo=1;
			end case;
			
			if l_spo=1 then l_close_date=l_date;
			else l_close_date=null;
			end if;
			
			raise notice '% % % % % % %', l_id_card, l_id_target, l_type_spo, l_spo, l_date date, l_close_date, l_date;
			
			insert into talon (id_card, id_target, type_spo, spo, close_date, open_date) values (l_id_card, l_id_target, l_type_spo, l_spo, l_close_date, l_date) returning id_talon into l_id_talon;
			commit;
			
			
			select floor(random()*2+1)::integer into l_id_visit_type;
			select floor(random()*4+1)::integer into l_id_zab_type;
			select floor(random()*50+1)::integer into l_id_doctor;
			select d.id_spec from doctor d where d.id_doctor=l_id_doctor into l_id_spec;
			select s.type_spec from speciality s where s.id_spec=l_id_spec into l_type_spec;
			select m.id_mkb from tmp_mkb m where m.id_spec=l_id_spec order by random() limit 1 into l_id_mkb;
						
			case l_spo
			when 2 then l_next_date=l_date+4;
			else l_next_date=null;
			end case;
			
			raise notice 'VISIT: % *** % % % % % % %', l_id_talon, l_id_visit_type, l_id_zab_type, l_id_doctor, l_id_spec, l_type_spec, l_id_mkb, l_next_date;
			
			insert into visit (id_talon, visit_date, id_visit_type, id_zab_type, id_doctor, id_mkb, next_date) values (l_id_talon, l_date, l_id_visit_type, l_id_zab_type, l_id_doctor, l_id_mkb, l_next_date) returning id_visit into l_id_visit;
			commit;
			
			
			jj=jj+1;
			
		end loop;
	
		l_year=l_year+1;
		ii=ii+1;
	end loop;	

end loop;
end$$;


---

\c clinic_db

set search_path=clinic_schema, public;

select pg_size_pretty(pg_database_size('clinic_db'));

select count(*) from talon;

select extract(year from open_date), count(distinct id_card) from talon group by 1;

select extract(year from open_date), count(id_talon) from talon group by 1;

select extract(year from open_date), count(t.id_talon) from talon t left join visit v on v.id_talon=t.id_talon where t.id_talon is null group by 1;

---
select extract(year from open_date), extract(month from open_date), count(id_talon) from talon group by 1, 2;

select extract(year from open_date), extract(month from open_date), count(id_talon) from talon where open_date < '01.01.2022'::date group by 1, 2;

select t.open_date, to_char(t.open_date - INTERVAL '6 month', 'YYYY-MM-DD') from talon t where t.open_date > '2024-06-13'::date limit 10;



select count(*) from talon where close_date=open_date and (open_date between '2020-01-01' and '2021-01-01');

select extract(year from open_date), id_target, count(id_talon) from talon group by 1, 2;
select extract(year from open_date), id_target, count(id_talon) from talon where open_date between '2020-01-01' and '2021-01-01' group by 1, 2;

select count(*) from visit where (visit_date between '2020-01-01' and '2021-01-01') and (next_date is not null);






